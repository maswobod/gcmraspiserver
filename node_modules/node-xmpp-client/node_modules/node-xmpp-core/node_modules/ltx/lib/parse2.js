'use strict'

var LtxParser = require('./parsers/ltx')
var Element = require('./Element')

var p = new LtxParser()

p.write('<dummy_ltx>')

module.exports = function parse (data) {
  var el = null
  var result = null

  function onStartElement (name, attrs) {
    var child = new Element(name, attrs)
    if (!el) {
      el = child
    } else {
      el = el.cnode(child)
    }
  }

  function onText (str) {
    el.t(str)
  }

  function onEndElement (name) {
    if (!el) throw new Error('mismatch')
    console.log('foo')
    if (name !== el.name) throw new Error('mismatch')
    console.log('pouet')
    if (el.parent) el = el.parent
    else result = el
  }

  function onError (err) {
    throw err
  }

  p.on('startElement', onStartElement)
  p.on('text', onText)
  p.once('error', onError)
  p.once('endElement', onEndElement)

  p.write(data)

  p.removeListener('startElement', onStartElement)
  p.removeListener('text', onText)
  p.removeListener('endElement', onEndElement)
  p.removeListener('error', onError)

  if (!result) throw new Error('mismatch')
  return result
}

// console.log(module.exports('<root>'))
//
// var el = module.exports("<root xmlns='https://github.com/astro/ltx'/>")
// console.log(el.name)
// console.log(el.attrs.xmlns)
// console.log(el.is('root', 'https://github.com/astro/ltx'))
// // console.log()
// // console.log(module.exports('<foobar truc="machin"><lol/></foobar>'))
// // console.log(module.exports('<truc truc="machin"><lol/></foobar>'))
// //
// var el2 = module.exports("<x:root xmlns:x='https://github.com/astro/ltx'/>")
// console.log(el.name, 'x:root')
// console.log(el.getName(), 'root')
// console.log(el.is('root', 'https://github.com/astro/ltx'))
